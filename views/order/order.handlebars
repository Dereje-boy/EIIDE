<link rel="stylesheet" href="../index.css">
<style>
    /* Additional styles for orders page */
    .orders-container {
        max-width: 1200px;
        margin: 2rem auto;
        padding: 1rem;
    }

    .order-card {
        background: white;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        padding: 2rem;
        margin-bottom: 2rem;
    }

    .order-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1.5rem;
        padding-bottom: 1rem;
        border-bottom: 1px solid #eee;
    }

    .order-id {
        font-size: 1.2rem;
        font-weight: bold;
        color: #2c3e50;
    }

    .order-date {
        color: #7f8c8d;
    }

    .order-status {
        padding: 0.25rem 0.75rem;
        border-radius: 4px;
        font-size: 0.85rem;
        font-weight: bold;
    }

    .status-pending {
        background-color: #fff3cd;
        color: #856404;
    }

    .status-completed {
        background-color: #d4edda;
        color: #155724;
    }

    .order-details {
        display: grid;
        grid-template-columns: 1fr 2fr;
        gap: 2rem;
    }

    .product-info {
        display: flex;
        gap: 1.5rem;
    }

    .product-image {
        width: 120px;
        height: 120px;
        background-color: #f5f5f5;
        background-size: contain;
        background-position: center;
        background-repeat: no-repeat;
        border-radius: 4px;
    }

    .order-summary {
        margin-top: 1.5rem;
        padding-top: 1.5rem;
        border-top: 1px solid #eee;
    }

    .summary-row {
        display: flex;
        justify-content: space-between;
        margin-bottom: 0.5rem;
    }

    .summary-label {
        color: #7f8c8d;
    }

    .summary-value {
        font-weight: bold;
    }

    .total-row {
        font-size: 1.1rem;
        margin-top: 1rem;
        padding-top: 1rem;
        border-top: 1px solid #eee;
    }

    .receipt-section {
        margin-top: 1.5rem;
    }

    .receipt-image {
        max-width: 100%;
        max-height: 300px;
        margin-top: 1rem;
        border: 1px solid #ddd;
        border-radius: 4px;
    }

    @media (max-width: 768px) {
        .order-details {
            grid-template-columns: 1fr;
        }

        .order-header {
            flex-direction: column;
            align-items: flex-start;
            gap: 0.5rem;
        }
    }
</style>

<!-- Orders Content -->
<div class="container orders-container">
    <h1>My Orders</h1>

    <div id="loading-message" class="loading">Loading your orders...</div>
    <div id="error-message" class="error-message" style="display: none;"></div>

    <div id="orders-list"></div>
</div>

<script src="../index.js"></script>
<script>
    // Mobile Menu Toggle
    document.querySelector('.mobile-menu-btn').addEventListener('click', function () {
        document.getElementById('main-nav').classList.toggle('active');
    });

    document.addEventListener('DOMContentLoaded', function () {

        // DOM elements
        const ordersList = document.getElementById('orders-list');
        const loadingMessage = document.getElementById('loading-message');
        const errorMessage = document.getElementById('error-message');

        // Fetch and display orders
        loadCustomerOrders();

        async function loadCustomerOrders() {
            try {
                //const response = await fetch(`http://localhost:3000/api/orders/acc_id}`);
                const response = await fetch('/api/orders/acc_id')

                if (!response.ok) {
                    throw new Error('Failed to fetch orders');
                }

                const result = await response.json();

                if (result.success) {
                    if (result.data.length === 0) {
                        ordersList.innerHTML = '<p>You have no orders yet.</p>';
                    } else {
                        renderOrders(result.data);
                    }
                    loadingMessage.style.display = 'none';
                } else {
                    showError(result.message || 'Failed to load orders');
                }
            } catch (error) {
                console.error('Error loading orders:', error);
                showError('Failed to load orders. Please try again later. ' + error);
            }
        }

        function renderOrders(orders) {
            ordersList.innerHTML = '';

            orders.forEach(order => {
                const orderCard = document.createElement('div');
                orderCard.className = 'order-card';

                // Format date
                const orderDate = new Date(order.order_date).toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                });

                orderCard.innerHTML = `
                <div class="order-header">
                    <div>
                        <span class="order-id">Order #${order.order_id}</span>
                        <span class="order-date">${orderDate}</span>
                    </div>
                </div>
                
                <div class="order-details">
                    <div class="product-info">
                        <div class="product-image" style="background-image: url('${order.product_image || 'https://via.placeholder.com/120'}')"></div>
                        <div>
                            <h3>${order.pro_name}</h3>
                            <p>${order.pro_code}</p>
                            <p>${order.pro_name}</p>
                            <p>Unit Price: $${order.pro_price}</p>
                            <p>Quantity: ${order.quantity}</p>
                            <p>Total Price: $${order.total_price}</p>
                        </div>
                    </div>
                    
                    <div class="order-summary">
                        <div class="summary-row">
                            <span class="summary-label">Subtotal:</span>
                            <span class="summary-value">$${(order.pro_price * order.quantity)}</span>
                        </div>
                        <div class="summary-row">
                            <span class="summary-label">Tax:</span>
                            <span class="summary-value">$0.00</span>
                        </div>
                        <div class="summary-row total-row">
                            <span class="summary-label">Total:</span>
                            <span class="summary-value">$${order.total_price}</span>
                        </div>
                    </div>
                </div>
                
                <div class="receipt-section">
                    <h4>Payment Receipt</h4>
                    <img src="${order.receipt_image}" alt="Payment receipt" class="receipt-image" onerror="this.style.display='none'">
                </div>
            `;

                ordersList.appendChild(orderCard);
            });
        }

        function showError(message) {
            loadingMessage.style.display = 'none';
            errorMessage.textContent = message;
            errorMessage.style.display = 'block';
        }

        // Mobile menu toggle (consistent with other pages)
        document.querySelector('.mobile-menu-btn').addEventListener('click', function () {
            document.getElementById('main-nav').classList.toggle('active');
        });
    });
</script>